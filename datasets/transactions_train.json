{
  "type": "PostgreSQL",
  "managed": true,
  "featureGroup": false,
  "formatType": "csv",
  "checklists": {
    "checklists": []
  },
  "checks": [],
  "customMeta": {
    "kv": {}
  },
  "flowOptions": {
    "virtualizable": false,
    "rebuildBehavior": "NORMAL",
    "crossProjectBuildBehavior": "DEFAULT"
  },
  "readWriteOptions": {
    "preserveOrder": false,
    "writeBuckets": 1,
    "forceSingleOutputFile": false,
    "defaultReadOrdering": {
      "enabled": false,
      "rules": []
    }
  },
  "formatParams": {
    "style": "unix",
    "charset": "utf8",
    "separator": "\t",
    "quoteChar": "\"",
    "escapeChar": "\\",
    "maxRowChars": 100000000,
    "dateSerializationFormat": "ISO",
    "arrayMapFormat": "json",
    "hiveSeparators": [
      "\u0002",
      "\u0003",
      "\u0004",
      "\u0005",
      "\u0006",
      "\u0007",
      "\b"
    ],
    "skipRowsBeforeHeader": 0,
    "parseHeaderRow": false,
    "skipRowsAfterHeader": 0,
    "probableNumberOfRecords": 0,
    "normalizeBooleans": false,
    "normalizeDoubles": true,
    "readAdditionalColumnsBehavior": "INSERT_IN_DATA_WARNING",
    "readMissingColumnsBehavior": "DISCARD_SILENT",
    "readDataTypeMismatchBehavior": "DISCARD_WARNING",
    "writeDataTypeMismatchBehavior": "DISCARD_WARNING",
    "fileReadFailureBehavior": "FAIL",
    "compress": "gz"
  },
  "partitioning": {
    "ignoreNonMatchingFile": false,
    "considerMissingRequestedPartitionsAsEmpty": false,
    "dimensions": []
  },
  "creationTag": {
    "versionNumber": 0,
    "lastModifiedBy": {
      "login": "dataiku-admin"
    },
    "lastModifiedOn": 1623794393536,
    "extendedProperties": {}
  },
  "tags": [],
  "params": {
    "writeWithCopyBadDataBehavior": "NOVERIFY_ERROR",
    "connection": "Postgres-local",
    "notReadyIfEmpty": false,
    "mode": "table",
    "partitioningType": "custom",
    "normalizeDoubles": true,
    "table": "${projectKey}_transactions_train",
    "tableCreationMode": "auto",
    "writeInsertBatchSize": 10000,
    "noDropOnSchemaMismatch": false,
    "writeJDBCBadDataBehavior": "DISCARD_ROW",
    "readColsWithUnknownTzAsDates": false,
    "readSQLDateColsAsDSSDates": true,
    "variablesExpansionLoopConfig": {
      "enabled": false,
      "mode": "CREATE_VARIABLE_FOR_EACH_COLUMN",
      "replacements": []
    },
    "sparkJdbcAccess": "NONE",
    "numPartitions": -1
  },
  "schema": {
    "columns": [
      {"name":"transaction_id","type":"bigint"},
      {"name":"authorized_flag","type":"bigint"},
      {"name":"purchase_date","type":"string"},
      {"name":"purchase_date_parsed","type":"date"},
      {"name":"purchase_year","type":"bigint"},
      {"name":"purchase_month","type":"bigint"},
      {"name":"purchase_day","type":"bigint"},
      {"name":"purchase_dow","type":"bigint"},
      {"name":"purchase_weekend","type":"bigint"},
      {"name":"purchase_hour","type":"bigint"},
      {"name":"card_id","type":"string"},
      {"name":"merchant_id","type":"string"},
      {"name":"merchant_category_id","type":"bigint"},
      {"name":"item_category","type":"string"},
      {"name":"purchase_amount","type":"double"},
      {"name":"signature_provided","type":"bigint"},
      {"name":"merchant_merchant_id","type":"string"},
      {"name":"merchant_merchant_category_id","type":"bigint"},
      {"name":"merchant_subsector_description","type":"string"},
      {"name":"merchant_latitude","type":"double"},
      {"name":"merchant_longitude","type":"double"},
      {"name":"card_internal_card_mapping","type":"string"},
      {"name":"card_first_active_month","type":"string"},
      {"name":"card_first_active_month_parsed","type":"date"},
      {"name":"days_active","type":"bigint"},
      {"name":"card_reward_program","type":"string"},
      {"name":"card_latitude","type":"double"},
      {"name":"card_longitude","type":"double"},
      {"name":"card_fico_score","type":"double"},
      {"name":"card_age","type":"double"},
      {"name":"merchant_location","type":"string"},
      {"name":"merchant_cardholder_distance","type":"double"},
      {"name":"merchant_state","type":"string"},
      {"name":"merchant_state_enName","type":"string"},
      {"name":"card_location","type":"string"},
      {"name":"card_state","type":"string"},
      {"name":"card_state_enName","type":"string"}
    ],
    "userModified": true
  },
  "dkuProperties": [],
  "metrics": {
    "probes": [
      {
        "type": "basic",
        "enabled": true,
        "computeOnBuildMode": "PARTITION",
        "meta": {
          "name": "Basic data",
          "level": 0
        },
        "configuration": {}
      },
      {
        "type": "records",
        "enabled": true,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Record count",
          "level": 0
        },
        "configuration": {}
      },
      {
        "type": "col_stats",
        "enabled": true,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Columns statistics",
          "level": 2
        },
        "configuration": {
          "aggregates": [
            {
              "column": "authorized_flag",
              "aggregated": "MIN"
            },
            {
              "column": "authorized_flag",
              "aggregated": "MAX"
            },
            {
              "column": "purchase_amount",
              "aggregated": "MIN"
            },
            {
              "column": "purchase_amount",
              "aggregated": "MAX"
            }
          ]
        }
      },
      {
        "type": "adv_col_stats",
        "enabled": false,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Most frequent values",
          "level": 3
        },
        "configuration": {
          "aggregates": [],
          "numberTopValues": 10
        }
      },
      {
        "type": "percentile_stats",
        "enabled": false,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Columns percentiles",
          "level": 4
        },
        "configuration": {
          "aggregates": []
        }
      },
      {
        "type": "verify_col",
        "enabled": false,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Data validity",
          "level": 4
        },
        "configuration": {
          "aggregates": []
        }
      }
    ],
    "engineConfig": {
      "padRunsWithMetrics": false,
      "hive": {
        "active": true,
        "extraConf": []
      },
      "basic": {},
      "dss": {
        "active": true,
        "selection": {
          "useMemTable": false,
          "filter": {
            "distinct": false,
            "enabled": false
          },
          "partitionSelectionMethod": "ALL",
          "latestPartitionsN": 1,
          "ordering": {
            "enabled": false,
            "rules": []
          },
          "samplingMethod": "FULL",
          "maxRecords": -1,
          "targetRatio": 0.02,
          "ascending": true,
          "withinFirstN": -1,
          "maxReadUncompressedBytes": -1
        }
      },
      "sql": {
        "active": true
      },
      "impala": {
        "active": true
      },
      "spark": {
        "active": true,
        "extraConf": []
      },
      "python": {}
    },
    "displayedState": {
      "partition": "NP",
      "columns": [],
      "metrics": [
        "basic:COUNT_COLUMNS",
        "records:COUNT_RECORDS"
      ]
    }
  },
  "metricsChecks": {
    "monitor": true,
    "checks": [
      {
        "type": "python",
        "code": "# Define here a function that returns the outcome of the rule check.\ndef process(last_values, dataset, partition_id):\n    # last_values is a dict of the last values of the metrics,\n    # with the values as a dataiku.metrics.MetricDataPoint.\n    # dataset is a dataiku.Dataset object\n    min_flag \u003d int(last_values[\u0027col_stats:MIN:authorized_flag\u0027].get_value())\n    max_flag \u003d int(last_values[\u0027col_stats:MAX:authorized_flag\u0027].get_value())\n\n    if max_flag - min_flag \u003e 1:\n        return \u0027OK\u0027, \u0027Expected target values\u0027\n    else:\n        return \u0027ERROR\u0027, \u0027Unexpected target values\u0027",
        "envSelection": {
          "envMode": "USE_BUILTIN_MODE",
          "envName": ""
        },
        "meta": {
          "name": "",
          "label": ""
        },
        "id": "SDC9P4yX",
        "displayName": "Python code",
        "computeOnBuildMode": "PARTITION",
        "autoRun": true,
        "enabled": true
      }
    ],
    "displayedState": {
      "checks": []
    }
  },
  "customFields": {}
}