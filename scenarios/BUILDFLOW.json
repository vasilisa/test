{
  "type": "step_based",
  "name": "Build Flow",
  "active": false,
  "runAsUser": "admin",
  "checklists": {
    "checklists": []
  },
  "delayedTriggersBehavior": {
    "delayWhileRunning": true,
    "squashDelayedTriggers": true,
    "suppressTriggersWhileRunning": true
  },
  "tags": [
    "custom python steps",
    "scenario variables"
  ],
  "triggers": [
    {
      "id": "CmOqcp7G",
      "type": "temporal",
      "name": "Time-based",
      "delay": 5,
      "active": false,
      "params": {
        "repeatFrequency": 1,
        "frequency": "Minutely",
        "startingFrom": "2022-07-14",
        "daysOfWeek": [
          "Thursday"
        ],
        "monthlyRunOn": "ON_THE_DAY",
        "minute": 30,
        "hour": 2,
        "timezone": "SERVER",
        "lastUpdate": 1730900921060
      }
    },
    {
      "id": "GigF0Zeh",
      "type": "sql_query",
      "name": "SQL query change",
      "delay": 900,
      "active": true,
      "params": {
        "connection": "Postgres-local",
        "sql": "SELECT COUNT(*) AS row_count\nFROM transactions_MES_filtered;",
        "hasLimit": true,
        "limit": 10000
      },
      "graceDelaySettings": {
        "delay": 120,
        "checkAgainAfterGraceDelay": true
      }
    },
    {
      "id": "IfDjHmEW",
      "type": "custom_python",
      "name": "Custom trigger",
      "delay": 3600,
      "active": false,
      "params": {
        "code": "from dataiku.scenario import Trigger\nt \u003d Trigger()\nif True: # your condition here\n    t.fire()",
        "envSelection": {
          "envMode": "INHERIT"
        }
      },
      "graceDelaySettings": {
        "delay": 0,
        "checkAgainAfterGraceDelay": false
      }
    }
  ],
  "reporters": [
    {
      "active": false,
      "messaging": {
        "type": "mail-scenario",
        "configuration": {
          "channelId": "VS_test_emails",
          "subject": "DSS scenario ${scenarioName}: ${outcome}",
          "recipient": "${recipient_list}",
          "sendAsHTML": false,
          "attachments": [
            {
              "type": "LOG",
              "params": {}
            }
          ],
          "messageSource": "TEMPLATE_FILE",
          "templateFormat": "FREEMARKER",
          "templateName": "default.ftl"
        }
      },
      "id": "3XDb73WY",
      "name": "Build Flow reporter",
      "runConditionEnabled": false,
      "runCondition": "outcome !\u003d \u0027SUCCESS\u0027",
      "phase": "END"
    },
    {
      "active": false,
      "messaging": {
        "type": "slack-scenario",
        "configuration": {
          "message": "DSS Scenario \u003c${scenarioRunURL}|${scenarioName}\u003e triggered by ${triggerName} : ${outcome} ${if(outcome \u003d\u003d \u0027SUCCESS\u0027, \u0027:white_check_mark:\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027FAILED\u0027, \u0027:red_circle:\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027WARNING\u0027, \u0027:red_circle:\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027\u0027 || outcome \u003d\u003d \u0027N/A\u0027, \u0027:bell:\u0027, \u0027\u0027)}",
          "messageMode": "TEXT_MESSAGE",
          "blocks": "[\n    {\n        \"type\": \"section\",\n        \"text\": {\n            \"type\": \"mrkdwn\",\n            \"text\": \"*DSS Scenario \u003c${scenarioRunURL}|${scenarioName}\u003e:* ${outcome} ${if(outcome \u003d\u003d \u0027SUCCESS\u0027, \u0027:white_check_mark:\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027FAILED\u0027, \u0027:red_circle:\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027WARNING\u0027, \u0027:red_circle:\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027\u0027 || outcome \u003d\u003d \u0027N/A\u0027, \u0027:bell:\u0027, \u0027\u0027)}\"\n        }\n    },\n    {\n        \"type\": \"context\",\n        \"elements\": [\n            {\n                \"type\": \"mrkdwn\",\n                \"text\": \"Triggered by ${triggerName}\"\n            }\n        ]\n    }\n]\n",
          "mode": "WEBHOOK",
          "webhookUrl": "https://hooks.slack.com/services/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",
          "useProxy": true,
          "asUser": false,
          "linkNames": false
        }
      },
      "id": "NQCyfSPJ",
      "name": "Slack  reporter",
      "runConditionEnabled": true,
      "runCondition": "outcome \u003d\u003d \u0027SUCCESS\u0027",
      "phase": "START"
    },
    {
      "active": false,
      "messaging": {
        "type": "msft-teams-scenario",
        "configuration": {
          "message": "{  \n   \"type\":\"message\",  \n   \"attachments\":[  \n      {  \n         \"contentType\":\"application/vnd.microsoft.card.adaptive\",  \n         \"contentUrl\":null,  \n         \"content\":{  \n            \"$schema\":\"http://adaptivecards.io/schemas/adaptive-card.json\",  \n            \"type\":\"AdaptiveCard\",  \n            \"version\":\"1.6\",  \n            \"body\":[  \n                \n            {\n                \"type\": \"ColumnSet\",\n                \"columns\": [\n                    {\n                        \"type\": \"Column\",\n                        \"items\": [\n                            {\n                   \n                                \"type\": \"Image\",\n                                \"style\": \"Person\",\n                                \"url\":  \"https://adaptivecards.io/content/cats/3.png\",\n                                \"altText\": \"${creator.name}\",\n                                \"size\": \"Medium\"\n                            }\n                        ],\n                        \"width\": \"auto\"\n                    },\n                    {\n                        \"type\": \"Column\",\n                        \"items\": [\n                            {\n                                \"type\": \"TextBlock\",\n                                \"text\":  \"Hi \u003cat\u003eVasilisa Skvortsova\u003c/at\u003e\",\n                                \"weight\": \"Bolder\",\n                                \"wrap\": true\n                            }\n                           \n                        ],\n                        \"width\": \"stretch\"\n                    },\n\n                    {\n                        \"type\": \"Column\",\n                        \"items\": [\n                            {\n                                \"type\": \"TextBlock\",\n                                \"text\": \"Project: ${scenarioProjectKey}\",\n                                \"weight\": \"Bolder\",\n                                \"wrap\": true\n                            },\n                            {\n                                \"type\": \"TextBlock\",\n                                \"spacing\": \"None\",\n                                \"text\": \"scenario [${scenarioName}](${scenarioRunURL}) with outcome: ${if(outcome \u003d\u003d \u0027SUCCESS\u0027, \u0027\u0026#x2705;\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027FAILED\u0027, \u0027\u0026#x1F534;\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027\u0027, \u0027\u0026#x1F514;\u0027, \u0027\u0027)}: **${outcome}**\",\n                                \"isSubtle\": true,\n                                \"wrap\": true\n                            },\n                            {\n                                \"type\": \"TextBlock\",\n                                \"text\": \"**Trigger**: ${triggerType}\",\n                                \"wrap\": true\n                            }\n                        ],\n               \n                        \"width\": \"stretch\"\n                    }\n                \n                ]\n            }\n        ],\n        \"msteams\": \n            {\n                \"entities\": \n                [\n                    {\n                        \"type\": \"mention\",\n                        \"text\": \"\u003cat\u003eVasilisa Skvortsova\u003c/at\u003e\",\n                        \"mentioned\": \n                        {\n                        \"id\": \"vasilisa.skvortsova@dataiku.com\",\n                        \"name\": \"Vasilisa Skvortsova\"\n                        }\n                    }\n                \n                ]\n            },\n\n        \"actions\": [\n        {\n            \"type\": \"Action.OpenUrl\",\n            \"title\": \"View in Dataiku\",\n            \"url\": \"${dssURL}\"\n        }\n    ]\n    }\n    }\n    ]\n}\n",
          "webhookType": "WORKFLOWS",
          "useProxy": true,
          "useGlobalChannel": true,
          "channelId": "REPORTER"
        }
      },
      "id": "PS9ZG58y",
      "name": "teams-reporter",
      "runConditionEnabled": true,
      "runCondition": "outcome \u003d\u003d \u0027SUCCESS\u0027",
      "phase": "END"
    }
  ],
  "params": {
    "steps": [
      {
        "id": "build_2_true_d_transactions_joined_prepared",
        "type": "build_flowitem",
        "name": "Force build transactions_joined_prepared",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "builds": [
            {
              "type": "DATASET",
              "itemId": "transactions_joined_prepared",
              "partitionsSpec": ""
            }
          ],
          "jobType": "RECURSIVE_BUILD",
          "autoUpdateSchemaBeforeEachRecipeRun": false,
          "stopAtFlowZoneBoundary": false,
          "refreshHiveMetastore": true,
          "handleWarningsAs": "WARNING",
          "proceedOnFailure": false
        }
      },
      {
        "id": "comp_metrics",
        "type": "compute_metrics",
        "name": "Compute metrics on transactions",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "computes": [
            {
              "type": "DATASET",
              "itemId": "transactions_joined_prepared",
              "partitionsSpec": ""
            }
          ],
          "proceedOnFailure": false
        }
      },
      {
        "id": "check_false_d_transactions",
        "type": "check_dataset",
        "name": "Rules",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "checks": [
            {
              "type": "DATASET",
              "itemId": "transactions_joined_prepared",
              "partitionsSpec": ""
            }
          ],
          "handleWarningsAs": "WARNING",
          "computeAutomaticRules": true,
          "ignorePartitionSelectionMode": true,
          "proceedOnFailure": false
        }
      },
      {
        "id": "report44747d7e23eee2c4a7b01e2ee3b16f5e",
        "type": "send_report",
        "name": "send warning message",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "failOnMessageNotSent": true,
          "messaging": {
            "type": "msft-teams-scenario",
            "configuration": {
              "message": "Some rules are not OK! \n\n\n${if(outcome \u003d\u003d \u0027SUCCESS\u0027, \u0027✅\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027FAILED\u0027, \u0027🔴\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027WARNING\u0027, \u0027🔶\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027\u0027 || outcome \u003d\u003d \u0027N/A\u0027, \u0027🔔\u0027, \u0027\u0027)} DSS Scenario [${scenarioName}](${scenarioRunURL}) triggered by ${triggerName}: **${outcome}**",
              "webhookUrl": "https://ikuiku.webhook.office.com/webhookb2/c8648e23-d7e9-4a93-a4f3-43fee9139827@46de9a18-f826-49ea-ae07-61dd0f86f4ba/IncomingWebhook/6163facf83e446dcaf36e4bfbe22aa61/0af094a3-d7d1-4bc1-9752-00af14f513ec/V2Qxw5b7AU3JZfDUr6-2BZkX-Qh49PpqBqOJKU6nOH_P41",
              "webhookType": "OFFICE365",
              "useProxy": true,
              "useGlobalChannel": false,
              "channelId": "REPORTER"
            }
          }
        }
      },
      {
        "id": "build_0_true_d_transactions_joined",
        "type": "build_flowitem",
        "name": "build transactions joined",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "builds": [
            {
              "type": "DATASET",
              "itemId": "transactions_joined",
              "partitionsSpec": ""
            }
          ],
          "jobType": "RECURSIVE_BUILD",
          "autoUpdateSchemaBeforeEachRecipeRun": false,
          "stopAtFlowZoneBoundary": false,
          "refreshHiveMetastore": true,
          "handleWarningsAs": "WARNING",
          "proceedOnFailure": false
        }
      },
      {
        "id": "comp_metrics_d_transactions_joined",
        "type": "compute_metrics",
        "name": "metrics transactions joined",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "computes": [
            {
              "type": "DATASET",
              "itemId": "transactions_joined",
              "partitionsSpec": ""
            }
          ],
          "proceedOnFailure": false
        }
      },
      {
        "id": "custom_python_2irEzGJljH3/QOL5k7/MeA",
        "type": "custom_python",
        "name": "ExtractMetrics",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "script": "import dataiku\nfrom dataiku.scenario import Scenario\n\nclient  \u003d dataiku.api_client()\nproject \u003d client.get_project(dataiku.default_project_key())\n\ndataset \u003d project.get_dataset(\"transactions_joined\")\nruleset \u003d dataset.get_data_quality_rules()\nrules   \u003d ruleset.list_rules()\n\n# Returns a list of DSSDataQualityRule\n\nfor rule in rules:\n        # Access to main information of the rule\n        print(\"Rule id: %s\" % rule.id)\n        print(\"name: %s\" % rule.name)\n        \n        \n# get a specific rule and it\u0027s outcome: get the first rule \nrule \u003d ruleset.get_last_rules_results()[0]\nprint(rule.get_raw())\n\n# set Rule outcome as the Scenario Variable \nScenario().set_scenario_variables(VariableName_column_count_status\u003drule.outcome)",
          "envSelection": {
            "envMode": "INHERIT"
          },
          "proceedOnFailure": false
        }
      },
      {
        "id": "report1fe37f036838c3d8e7454ca604deed54",
        "type": "send_report",
        "name": "Send Message",
        "runConditionType": "RUN_CONDITIONALLY",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "VariableName_column_count_status\u003d\u003d\u0027OK\u0027",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "failOnMessageNotSent": true,
          "messaging": {
            "type": "msft-teams-scenario",
            "configuration": {
              "message": "The number of columns as expected! \n${if(outcome \u003d\u003d \u0027SUCCESS\u0027, \u0027✅\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027FAILED\u0027, \u0027🔴\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027WARNING\u0027, \u0027🔶\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027\u0027 || outcome \u003d\u003d \u0027N/A\u0027, \u0027🔔\u0027, \u0027\u0027)} DSS Scenario [${scenarioName}](${scenarioRunURL}) triggered by ${triggerName}: **${outcome}**",
              "webhookUrl": "https://ikuiku.webhook.office.com/webhookb2/c8648e23-d7e9-4a93-a4f3-43fee9139827@46de9a18-f826-49ea-ae07-61dd0f86f4ba/IncomingWebhook/6163facf83e446dcaf36e4bfbe22aa61/0af094a3-d7d1-4bc1-9752-00af14f513ec/V2Qxw5b7AU3JZfDUr6-2BZkX-Qh49PpqBqOJKU6nOH_P41",
              "webhookType": "OFFICE365",
              "useProxy": true,
              "useGlobalChannel": false,
              "channelId": "REPORTER"
            }
          }
        }
      },
      {
        "id": "build_0_true_d_transactions_MES_filtered_scored",
        "type": "build_flowitem",
        "name": "Score unknown transactions",
        "runConditionType": "RUN_CONDITIONALLY",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "VariableName_column_count_status\u003d\u003d\u0027OK\u0027",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "builds": [
            {
              "type": "DATASET",
              "itemId": "transactions_MES_filtered_scored",
              "partitionsSpec": ""
            }
          ],
          "jobType": "RECURSIVE_BUILD",
          "autoUpdateSchemaBeforeEachRecipeRun": false,
          "stopAtFlowZoneBoundary": false,
          "refreshHiveMetastore": true,
          "handleWarningsAs": "WARNING",
          "proceedOnFailure": false
        }
      }
    ]
  },
  "automationLocal": false,
  "customFields": {},
  "markedAsTest": false
}